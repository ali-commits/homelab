services:
  zitadel:
    restart: unless-stopped
    image: ghcr.io/zitadel/zitadel:latest
    container_name: zitadel
    command: start-from-init --steps /current-dir/init-config.yaml --masterkey "${ZITADEL_MASTER_KEY}" --tlsMode external
    env_file:
      - .env
    environment:
      ZITADEL_EXTERNALDOMAIN: zitadel.alimunee.com
      ZITADEL_EXTERNALSECURE: false
      ZITADEL_TLS_ENABLED: false
      ZITADEL_DATABASE_POSTGRES_HOST: db
      ZITADEL_DATABASE_POSTGRES_PORT: 5432
      ZITADEL_DATABASE_POSTGRES_DATABASE: zitadel
      ZITADEL_DATABASE_POSTGRES_USER_USERNAME: zitadel
      ZITADEL_DATABASE_POSTGRES_USER_PASSWORD: ${ZITADEL_DATABASE_POSTGRES_USER_PASSWORD}
      ZITADEL_DATABASE_POSTGRES_USER_SSL_MODE: disable
      ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME: postgres
      ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD: ${ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD}
      ZITADEL_DATABASE_POSTGRES_ADMIN_SSL_MODE: disable
      ZITADEL_DEFAULTINSTANCE_FEATURES_LOGINV2_REQUIRED: false
      ZITADEL_DEFAULTINSTANCE_FEATURES_LOGINV2_BASEURI: https://zitadel.alimunee.com/ui/v2/login
      ZITADEL_OIDC_DEFAULTLOGINURLV2: https://zitadel.alimunee.com/ui/v2/login/login?authRequest=
      ZITADEL_OIDC_DEFAULTLOGOUTURLV2: https://zitadel.alimunee.com/ui/v2/login/logout?post_logout_redirect=
      ZITADEL_SAML_DEFAULTLOGINURLV2: https://zitadel.alimunee.com/ui/v2/login/login?samlRequest=
    healthcheck:
      test: ["CMD", "/app/zitadel", "ready"]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 10s
    volumes:
      - /storage/data/zitadel/config:/current-dir:delegated
      - ./init-config.yaml:/current-dir/init-config.yaml:ro
    ports:
      - "8081:8080"
      - "3001:3000"
    networks:
      - proxy
      - zitadel_internal
    depends_on:
      db:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.zitadel.entrypoints=web"
      - "traefik.http.routers.zitadel.rule=Host(`zitadel.alimunee.com`)"
      - "traefik.http.routers.zitadel.service=zitadel"
      - "traefik.http.services.zitadel.loadbalancer.server.port=8080"
      - "traefik.docker.network=proxy"
      - "traefik.http.middlewares.zitadel-headers.headers.customRequestHeaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.zitadel-headers.headers.customRequestHeaders.X-Forwarded-Host=zitadel.alimunee.com"
      - "traefik.http.routers.zitadel.middlewares=zitadel-headers"

  login:
    restart: unless-stopped
    image: ghcr.io/zitadel/zitadel-login:latest
    container_name: zitadel-login
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.zitadel-login.entrypoints=web"
      - "traefik.http.routers.zitadel-login.rule=Host(`zitadel.alimunee.com`) && PathPrefix(`/ui/v2/login`)"
      - "traefik.http.routers.zitadel-login.priority=100"
      - "traefik.http.routers.zitadel-login.service=zitadel-login"
      - "traefik.http.routers.zitadel-login.middlewares=zitadel-headers"
      - "traefik.http.services.zitadel-login.loadbalancer.server.port=3000"
    environment:
      - ZITADEL_API_URL=https://zitadel.alimunee.com
      - NEXT_PUBLIC_BASE_PATH=/ui/v2/login
      - ZITADEL_SERVICE_USER_TOKEN_FILE=/current-dir/login-client.pat
    user: "${UID:-1000}"
    networks:
      - proxy
      - zitadel_internal
    volumes:
      - /storage/data/zitadel/config:/current-dir:ro
    depends_on:
      zitadel:
        condition: service_healthy

  db:
    restart: unless-stopped
    image: postgres:17-alpine
    container_name: zitadel-db
    env_file:
      - .env
    environment:
      PGUSER: postgres
      POSTGRES_PASSWORD: ${ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD}
      POSTGRES_DB: zitadel
    volumes:
      - /storage/data/zitadel/zitadel-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d zitadel -U postgres"]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 20s
    networks:
      - zitadel_internal

networks:
  proxy:
    external: true
  zitadel_internal:
    name: zitadel_internal
    driver: bridge

volumes:
  zitadel-db:
